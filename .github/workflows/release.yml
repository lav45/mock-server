name: release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout.
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build tool image
        run: docker build --target tool -t mock-server:tool .

      - name: Cache composer
        uses: actions/cache@v4
        with:
          path: ./vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('./composer.lock') }}

      - name: Cache tools
        uses: actions/cache@v4
        with:
          path: ./tools
          key: ${{ runner.os }}-tools-${{ hashFiles('./tools/*/composer.lock') }}

      - name: Install composer dependencies
        run: ./composer install --optimize-autoloader --classmap-authoritative --prefer-dist --no-progress --no-dev --ansi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          VERSION_SHORT=$(echo $VERSION | awk -F. '{print $1"."$2}')
          echo "VERSION_SHORT=$VERSION_SHORT" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          target: server
          platforms: "linux/amd64,linux/arm64"
          tags: |
            lav45/mock-server:latest
            lav45/mock-server:${{ env.VERSION }}
            lav45/mock-server:${{ env.VERSION_SHORT }}
